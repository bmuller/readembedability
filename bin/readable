#!/usr/bin/env python
import asyncio
import sys
import logging

log = logging.getLogger("readembedability")
log.setLevel(logging.DEBUG)
#logging.basicConfig(level=logging.DEBUG)


############################################################
import os
sys.path.append("%s/.." % os.path.dirname(__file__))
############################################################
from readembedability.page import getReadembedable

if len(sys.argv) < 2:
    print("Usage: %s <image url>" % sys.argv[0])
    sys.exit(0)

async def fetch(url):
    result = await getReadembedable(url)
    for prop, entries in result.log.items():
        print("---------------------------------")
        print("Property:", prop)
        for entry in entries:
            parser, value, conf = entry
            print("%s (%i) %s" % (parser, conf, str(value).replace("\n", " ")))
        print("\n\n")
    
    print("\n\nFinal result:")
    for k, v in result.to_dict().items():
        if type(v) is str:
            v = v.replace("\n", " ")
        print("%s: %s\n" % (k, v))

loop = asyncio.get_event_loop()
loop.run_until_complete(fetch(sys.argv[1]))
